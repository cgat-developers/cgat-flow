##########################################################
##########################################################
##########################################################
## Exome pipeline parameters
##########################################################

# the genome to use
genome: hg38

# location of indexed genome for SAMtools
genome_dir: /path/to/genome/dir

########################################################
# directory where exported data is located
exportdir: export

# Design table for the experiment, mapping fastq files to samples and phenotypes
samples: ''

web_dir: ../web

# If you are not running exome data but targetted sequencing on a smaller region then change to 1
# Effect of this option is to skip base quality recalibration step
targetted: 0

# gtf file containing exon annotations
geneset: /path/to/ensembl.dir/geneset_all.gtf.gz

#picard memory
picard_memory: 9G

bwa:

    # location od BWA indexed genome
    index_dir: /path/to/genome

    # threads
    threads: 8

    # 
    remove_non_unique: ''

    # BWA alignment parameters
    mem_options: ''

    # BWA end-pairing parameters
    sample_options: ''

readgroup:

    library: Agilent_AllExonV5

    platform: illumina

    platform_unit: 1

    sample: blood

gatk:

    threads: 8

    memory: 2G

    # memory required for merging GVCF files
    # PLEASE NOTE: this is the memory allocated to picard
    # 1.2x this memory will be requested from the cluster to provide sufficent memory for the database tool.
    dbmem: 20G

    # path to dbsnp VCF (provided by GATK)
    dbsnp: /path/to/dbsnp.vcf

    # path to hapmap VCF (provided by GATK)
    hapmap: /path/to/hapmap.vcf

    # path to OMNI VCF (privided by GATK)
    omni: /path/to/1000G_omni

    # path to 1000G VDF (provided by GATK)
    kgenomes: /path/to/1000G_phase1.snps.high_confidence

    mills: /path/to/Mills_and_1000G_gold_standard

    axiom: /path/to/axiom

    # Additional options for GATK baserecalibrator
    baserecalibrator_options: ''

    # Additional options for GATK HaplotypeCaller
    hc_options: -A StrandOddsRatio -A DepthPerSampleHC

    # Additional options for GATK GenotypeGVCFs
    genotype_options: ''

    vcf_to_table: -F CHROM -F POS -F ID -F REF -F ALT -F QUAL -F FILTER -F AC -F AF -F AN -F BaseQRankSum -F DB -F DP -F Dels -F FS -F HaplotypeScore -F MLEAC -F MLEAF -F MQ -F MQ0 -F MQRankSum -F QD -F ReadPosRankSum -F SB -F SNPEFF_EFFECT -F SNPEFF_IMPACT -F SNPEFF_FUNCTIONAL_CLASS -F SNPEFF_CODON_CHANGE -F SNPEFF_AMINO_ACID_CHANGE -F SNPEFF_GENE_NAME -F SNPEFF_GENE_BIOTYPE -F SNPEFF_TRANSCRIPT_ID -F SNPEFF_EXON_ID -F dbNSFP_GERP++_RS -F dbNSFP_GERP++_NR -F dbNSFP_Ensembl_transcriptid -F dbNSFP_Uniprot_acc -F dbNSFP_Interpro_domain -F dbNSFP_SIFT_score -F dbNSFP_Polyphen2_HVAR_pred -F dbNSFP_29way_logOdds -F dbNSFP_1000Gp1_AF -F dbNSFP_1000Gp1_AFR_AF -F dbNSFP_1000Gp1_EUR_AF -F dbNSFP_1000Gp1_AMR_AF -F dbNSFP_1000Gp1_ASN_AF -F dbNSFP_ESP6500_AA_AF -F dbNSFP_ESP6500_EA_AF -F RSPOS -F SSR -F SAO -F VP -F VC -F PM -F TPA -F PMC -F MUT -F VLD -F OTHERKG -F PH3 -F CDA -F MTP -F OM -F CAF -F COMMON -GF GT -GF AD -GF GQ -GF PL -GF PQ -GF TP -GF AB -GF DP


# annotation is done using Ensembl! VEP
annotation:

    memory: 6G

    threads: 4

    # path to dbNSFP database (aggregation database for annotations)
    # leave blank if not required
    dbnsfp_path: /path/to/dbNFSP.txt.gz

    # dbNSFP columns to include
    # If left empty will fetch ALL annotations.
    # Examples: Uniprot_acc, Interpro_domain, 
    # SIFT_pred, Polyphen2_HDIV_pred, Polyphen2_HVAR_pred, 
    # LRT_pred, MutationTaster_pred, GERP++_NR, GERP++_RS, 
    # phastCons100way_vertebrate, 1000Gp1_AF, 1000Gp1_AFR_AF
    # ESP6500_AA_AF, ESP6500_EA_AF, MutationTaster_pred, 
    # MutationAssessor_pred, FATHMM_pred, PROVEAN_pred, 
    # CADD_phred, MetaSVM_pred, 1000Gp3_AC, 1000Gp3_AF, 
    # 1000Gp3_AFR_AC, 1000Gp3_AFR_AF, 1000Gp3_EUR_AC,
    # ESP6500_EA_AC, ESP6500_EA_AF, ExAC_AC, ExAC_AF,
    # ExAC_Adj_AC, ExAC_Adj_AF, ExAC_AFR_AC, ExAC_AFR_AF
    dbnsfp_columns:

    # path to VEP scripts
    veppath: /path/to/ensembl-vep-80/variant_effect_predictor

    # location of cached annotations
    # cached annotations should have the same version number
    # as the VEP executable 
    vepcache: /path/to/VEP

    # species name
    vepspecies: homo_sapiens

    # assembly - needs to correspond to data in cache directory
    vepassembly: GRCh38

    # vep parameters - see vep docs here
    # http://www.ensembl.org/info/docs/tools/vep/script/vep_options.html
    # format as for command line e.g. as --sift b --regulatory --domains
    # Option -e covers almost all annotations
    vepoptions: -e

    # Path to Somalier package (currently not available as conda package)
    # Website: https://github.com/brentp/somalier
    somalier_path: /path/to/somalier

    # Path to Somalier VCF specifying sites used for determination of relatedness
    # Provided by Somalier Project
    somalier_sites: /path/to/sites.hg38.vcf.gz

    # Path to 1000G data folder (provided by Somalier project)
    somalier_1kg: /path/to/1kg-somalier

    # Path to Somalier Ancestry Labels for 1000G (provided by Somalier project)
    somalier_labels: /path/to/ancestry-labels-1kg.tsv

    add_genes_of_interest: 0

    genes_of_interest: ''


# filtering of vcfs to select variants of interest
# filtering is done using 
filtering:

    # Quality Filtering can be done either by VQSR, a GATK machine-learning
    # algorithm, or by hard-filtering QC scores based on prespecified conditions
    quality: [VQSR OR hard]

    # 
    # quality filters, seperated by commas, as column'symbol'score where
    # column is the column to filter
    # symbol is '>', '<', '>=', '<=' (including quote marks)
    # score is a numeric value to filter by
    # e.g. GQ'>'20,DP'>'6,FS'<'60,SOR'<'4
    # only implemented for numeric columns
    quality: [GQ'>'20,DP'>'6,FS'<'60,SOR'<'4]

    # quality filter type - can be all or any
    # all = keep variants filling all the quality criteria specified above
    # any = keep variants filling any of the quality criteria specified above
    quality_ft: all

    # VEP filtering
    # Provide filtering command for filter_vep.
    # Can be multiple commands separated
    vep: 

    # columns to keep in the final variant tables (apart from CHROM,POS,ID,REF1,ALT,GT)
    columns: [GQ,DP,FS,SOR,POPMAX_calc,Adj_calc,EUR_AF_calc,EAS_AF_calc,AFR_AF_calc,SAS_AF_calc,ESP_AF_POPMAX_calc,ESP_AF_GLOBAL_calc,CSQ,dbNSFP_MutationTaster_pred,dbNSFP_Polyphen2_HDIV_pred,dbNSFP_Polyphen2_HVAR_pred,dbNSFP_SIFT_pred,SNPEFF_IMPACT]

coverage:

    # to activate calculating coverage of candidate genes, specified below.
    calculate: 1

    # supply gtf
    all_exons: /path/to/geneset_coding_exons.gtf.gz

    # comma-separated list of canonical ensembl identifiers for candidate genes of interest
    candidates: ''

    # path to r script for generating the coverage plots
    rscript: /path/to/coverage.r

    # the minimum read depth for counting a base as covered
    threshold: 15

roi:

    bed: ''

    # Regions of interest
    roi: /path/to/agilent/S04380110_Regions.bed

    intervals: /path/to/agilent/S04380110_Regions.interval_list

    # File mapping regions of interest to genes
    to_gene: /path/to/agilent/regions_to_genes.txt

    baits: /path/to/agilent/S04380110_Probes_5col_samheader_ucsc.bed

    regions: /path/to/agilent/S04380110_Regions_5col_samheader_ucsc.bed

    padding: 100

report:
    # number of threads to use to build the documentation
    threads: 1

    # directory for html documentation
    html: report/html

    # directory for doctrees
    doctrees: report/doctrees

    prefix: prefix
